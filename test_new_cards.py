#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
"""

import requests
import json

def test_new_cards():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏...")
    
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç 1: Day View —Å –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
    print("\nüéØ –¢–µ—Å—Ç 1: Day View (Art Exhibits)")
    payload = {
        "city": "Bangkok",
        "selected_category_ids": ["art_exhibits"],
        "use_live": True,
        "date": "2025-08-22"
    }
    
    try:
        response = requests.post(f"{base_url}/api/day-cards", json=payload)
        if response.status_code == 200:
            data = response.json()
            print(f"  ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {data['debug']['live_count']}")
            print(f"  üìÖ –î–∞—Ç–∞: {data['date']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
            if data['items']:
                first_event = data['items'][0]
                print(f"  üé® –ü–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ: {first_event['title']}")
                print(f"  üìù –û–ø–∏—Å–∞–Ω–∏–µ: {first_event.get('desc', '–ù–µ—Ç')[:50]}...")
                print(f"  üîó –ò—Å—Ç–æ—á–Ω–∏–∫: {first_event['source']}")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: Day View —Å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    print("\nüéØ –¢–µ—Å—Ç 2: Day View (Art + Workshops)")
    payload["selected_category_ids"] = ["art_exhibits", "workshops"]
    
    try:
        response = requests.post(f"{base_url}/api/day-cards", json=payload)
        if response.status_code == 200:
            data = response.json()
            print(f"  ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {data['debug']['live_count']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            sources = set(item['source'] for item in data['items'])
            print(f"  üåê –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {', '.join(sources)}")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: Week View
    print("\nüéØ –¢–µ—Å—Ç 3: Week View")
    week_payload = {
        "city": "Bangkok",
        "selected_category_ids": ["art_exhibits"],
        "use_live": True,
        "mode": "week",
        "date": "2025-08-22"
    }
    
    try:
        response = requests.post(f"{base_url}/api/plan-cards", json=week_payload)
        if response.status_code == 200:
            data = response.json()
            print(f"  ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {data['debug']['live_count']}")
            print(f"  üìÖ –ü–µ—Ä–∏–æ–¥: {data['debug']['date_from']} ‚Üí {data['debug']['date_to']}")
            print(f"  üìä –î–Ω–µ–π: {len(data['days'])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å
            if data['days']:
                first_day = data['days'][0]
                print(f"  üåÖ {first_day['day']}: {len(first_day['items'])} —Å–æ–±—ã—Ç–∏–π")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_new_cards()
