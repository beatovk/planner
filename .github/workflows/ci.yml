name: CI

on:
  push:
    branches: [ main, refactor/* ]
  pull_request:
    branches: [ main, refactor/* ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest -v --tb=short --cov=packages --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run flake8
      run: |
        flake8 packages/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 packages/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run black check
      run: |
        black --check packages/ tests/

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety
    
    - name: Run safety check
      run: |
        safety check --full-report

  integration:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run integration tests
      run: |
        pytest tests/places/test_integration_basic.py -v --tb=short
    
    - name: Run app tests
      run: |
        pytest tests/app/ -v --tb=short

  guard_deprecated:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for deprecated code
      run: |
        set -e
        echo "üîç Checking for deprecated code patterns..."
        
        # Check for DEPRECATED_*.py files
        FOUND_DEPRECATED=$(git ls-files | grep -E 'DEPRECATED_.*\.py' || true)
        if [ -n "$FOUND_DEPRECATED" ]; then
          echo "‚ùå Found DEPRECATED_*.py files:"
          echo "$FOUND_DEPRECATED"
          exit 1
        fi
        
        # Check for core/ and src/ directories (should be in deprecated/ or packages/)
        FOUND_LEGACY_DIRS=$(git ls-files | grep -E '^(core/|src/)' || true)
        if [ -n "$FOUND_LEGACY_DIRS" ]; then
          echo "‚ùå Found legacy directories (core/ or src/):"
          echo "$FOUND_LEGACY_DIRS"
          exit 1
        fi
        
        # Check for old import patterns
        FOUND_OLD_IMPORTS=$(git ls-files "*.py" | xargs grep -l "from core\." "from src\." || true)
        if [ -n "$FOUND_OLD_IMPORTS" ]; then
          echo "‚ùå Found old import patterns (from core. or from src.):"
          echo "$FOUND_OLD_IMPORTS"
          exit 1
        fi
        
        echo "‚úÖ No deprecated code found!"
        echo "‚úÖ All imports use packages/ structure"
        echo "‚úÖ No legacy directories in main tree"
