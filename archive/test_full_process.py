#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from core.live_events import load_source_map, fetch_for_categories

def test_full_process():
    print("üß™ –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π...")
    
    # –®–∞–≥ 1: –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—É –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    print("üìã –®–∞–≥ 1: –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—É –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
    sources_path = Path("data/sources.json")
    source_map = load_source_map(sources_path)
    print(f"  –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {list(source_map.keys())}")
    
    # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é art_exhibits
    print(f"\nüé® –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é 'art_exhibits'...")
    if "art_exhibits" in source_map:
        sources = source_map["art_exhibits"]
        print(f"  –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è art_exhibits: {sources}")
    else:
        print("  ‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è 'art_exhibits' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–∞—Ä—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
        return
    
    # –®–∞–≥ 3: –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    print(f"\nüìÖ –®–∞–≥ 3: –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è...")
    try:
        events = fetch_for_categories(source_map, ["art_exhibits"])
        print(f"  –°–æ–±—ã—Ç–∏–π –ø–æ–ª—É—á–µ–Ω–æ: {len(events)}")
        
        if events:
            print(f"  –ü–µ—Ä–≤—ã–µ 3 —Å–æ–±—ã—Ç–∏—è:")
            for i, event in enumerate(events[:3]):
                title = event.get('title', 'No title')
                date = event.get('date', 'No date')
                end = event.get('end', 'No end')
                print(f"    {i+1}. {title}")
                print(f"       –ü–µ—Ä–∏–æ–¥: {date} - {end}")
        else:
            print("  ‚ùå –°–æ–±—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_full_process()
