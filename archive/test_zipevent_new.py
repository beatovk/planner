#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ Zipevent —Ñ–µ—Ç—á–µ—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ sitemap
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from tools.fetchers.zipevent import fetch

def test_zipevent_new():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π Zipevent —Ñ–µ—Ç—á–µ—Ä (sitemap –ø–æ–¥—Ö–æ–¥)...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–≤—Å–µ —Å–æ–±—ã—Ç–∏—è)
        print("\nüìã –¢–µ—Å—Ç 1: –í—Å–µ —Å–æ–±—ã—Ç–∏—è")
        events = fetch()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")
        
        if events:
            print("\nüìÖ –ü–µ—Ä–≤—ã–µ 3 —Å–æ–±—ã—Ç–∏—è:")
            for i, event in enumerate(events[:3]):
                print(f"  {i+1}. {event.get('title', 'No title')}")
                print(f"     –î–∞—Ç–∞: {event.get('date', 'No date')} - {event.get('end', 'No end')}")
                print(f"     URL: {event.get('url', 'No URL')}")
                print(f"     Venue: {event.get('venue', 'No venue')}")
                print(f"     Image: {event.get('image', 'No image')}")
                print(f"     Tags: {event.get('tags', [])}")
                print(f"     Category: {event.get('category_hint', 'No category')}")
                print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π food
        print("\nüçï –¢–µ—Å—Ç 2: –ö–∞—Ç–µ–≥–æ—Ä–∏—è food")
        food_events = fetch("food")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ food —Å–æ–±—ã—Ç–∏–π: {len(food_events)}")
        
        if food_events:
            print("\nüìÖ Food —Å–æ–±—ã—Ç–∏—è:")
            for i, event in enumerate(food_events[:2]):
                print(f"  {i+1}. {event.get('title', 'No title')}")
                print(f"     –î–∞—Ç–∞: {event.get('date', 'No date')}")
                print(f"     Category: {event.get('category_hint', 'No category')}")
                print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π markets_fairs
        print("\nüõçÔ∏è –¢–µ—Å—Ç 3: –ö–∞—Ç–µ–≥–æ—Ä–∏—è markets_fairs")
        market_events = fetch("markets_fairs")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ market —Å–æ–±—ã—Ç–∏–π: {len(market_events)}")
        
        if market_events:
            print("\nüìÖ Market —Å–æ–±—ã—Ç–∏—è:")
            for i, event in enumerate(market_events[:2]):
                print(f"  {i+1}. {event.get('title', 'No title')}")
                print(f"     –î–∞—Ç–∞: {event.get('date', 'No date')}")
                print(f"     Category: {event.get('category_hint', 'No category')}")
                print()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        category_stats = {}
        for event in events:
            cat = event.get('category_hint', 'unknown')
            category_stats[cat] = category_stats.get(cat, 0) + 1
        
        for cat, count in sorted(category_stats.items(), key=lambda x: x[1], reverse=True):
            print(f"  {cat}: {count} —Å–æ–±—ã—Ç–∏–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_zipevent_new()
